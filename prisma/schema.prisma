// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Thread {
  id             String    @id @default(cuid())
  name           String
  createdAt      DateTime  @default(now())
  ownerId        String
  organizationId String?
  messages       Message[]
  private        Boolean @default(false)
  organizationPublic Boolean @default(false)
  updatedAt      DateTime @default(now())
  projectId      String?
  public         Boolean @default(false)
  project Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  archived       Boolean @default(false)


  @@index([ownerId])
  @@index([organizationId])
}

model Message {
  id        String   @id @default(cuid())
  thread    Thread   @relation(fields: [threadId], references: [id], onDelete: Cascade)
  threadId  String
  text      String   @db.Text
  createdAt DateTime @default(now())
  role      String
  senderId  String?
  model String @default("gemini-2.0-flash")
}

model Prompt {
    id String @id @default(cuid())
    name String
    description String
    content String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    lastUsed DateTime @default(now())
    ownerId String
    organizationId String?
    lastEditedBy String
    projectId String?
    organizationPublic Boolean @default(false)
    project Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Project {
    id String @id @default(cuid())
    name String
    ownerId String
    organizationId String?
    parentId String?
    prompts Prompt[]
    description String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    organizationPublic Boolean @default(false)
    threads Thread[]
}
